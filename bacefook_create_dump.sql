-- MySQL Script generated by MySQL Workbench
-- Mon Feb 25 15:56:28 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema bacefook
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `bacefook` ;

-- -----------------------------------------------------
-- Schema bacefook
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `bacefook` DEFAULT CHARACTER SET utf8 ;
USE `bacefook` ;

-- -----------------------------------------------------
-- Table `bacefook`.`cities`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bacefook`.`cities` ;

CREATE TABLE IF NOT EXISTS `bacefook`.`cities` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `city_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `bacefook`.`genders`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bacefook`.`genders` ;

CREATE TABLE IF NOT EXISTS `bacefook`.`genders` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `gender_name` ENUM('male', 'female', 'unspecified') NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `bacefook`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bacefook`.`users` ;

CREATE TABLE IF NOT EXISTS `bacefook`.`users` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `gender_id` INT(11) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `password` VARCHAR(80) NOT NULL,
  `birthday` DATE NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_gender_id`
    FOREIGN KEY (`gender_id`)
    REFERENCES `bacefook`.`genders` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE UNIQUE INDEX `email_UNIQUE` ON `bacefook`.`users` (`email` ASC) VISIBLE;

CREATE INDEX `fk_gender_id_idx` ON `bacefook`.`users` (`gender_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `bacefook`.`posts`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bacefook`.`posts` ;

CREATE TABLE IF NOT EXISTS `bacefook`.`posts` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `poster_id` INT(11) NOT NULL,
  `shares_post_id` INT(11) NULL DEFAULT NULL,
  `content` MEDIUMTEXT NOT NULL,
  `posting_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_poster_id_idx`
    FOREIGN KEY (`poster_id`)
    REFERENCES `bacefook`.`users` (`id`),
  CONSTRAINT `fk_shares_post_id_idx`
    FOREIGN KEY (`shares_post_id`)
    REFERENCES `bacefook`.`posts` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `fk_poster_id_idx` ON `bacefook`.`posts` (`poster_id` ASC) VISIBLE;

CREATE INDEX `fk_shares_post_id_idx` ON `bacefook`.`posts` (`shares_post_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `bacefook`.`photos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bacefook`.`photos` ;

CREATE TABLE IF NOT EXISTS `bacefook`.`photos` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `post_id` INT(11) NOT NULL,
  `url` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_post_of_photo_id`
    FOREIGN KEY (`post_id`)
    REFERENCES `bacefook`.`posts` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `fk_post_id_idx` ON `bacefook`.`photos` (`post_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `bacefook`.`additional_users_info`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bacefook`.`additional_users_info` ;

CREATE TABLE IF NOT EXISTS `bacefook`.`additional_users_info` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `city_id` INT(11) NULL DEFAULT NULL,
  `profile_photo_id` INT(11) NULL DEFAULT NULL,
  `phone` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_city_id`
    FOREIGN KEY (`city_id`)
    REFERENCES `bacefook`.`cities` (`id`),
  CONSTRAINT `fk_profile_photo_id`
    FOREIGN KEY (`profile_photo_id`)
    REFERENCES `bacefook`.`photos` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `fk_city_id_idx` ON `bacefook`.`additional_users_info` (`city_id` ASC) VISIBLE;

CREATE INDEX `fk_profile_photo_id_idx` ON `bacefook`.`additional_users_info` (`profile_photo_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `bacefook`.`albums`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bacefook`.`albums` ;

CREATE TABLE IF NOT EXISTS `bacefook`.`albums` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `user_id` INT(11) NOT NULL,
  `album_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_album_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `bacefook`.`users` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `fk_album_user_id_idx` ON `bacefook`.`albums` (`user_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `bacefook`.`album_photos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bacefook`.`album_photos` ;

CREATE TABLE IF NOT EXISTS `bacefook`.`album_photos` (
  `album_id` INT(11) NOT NULL,
  `photo_id` INT(11) NOT NULL,
  PRIMARY KEY (`album_id`, `photo_id`),
  CONSTRAINT `album_id_fk`
    FOREIGN KEY (`album_id`)
    REFERENCES `bacefook`.`albums` (`id`),
  CONSTRAINT `fk_album_id`
    FOREIGN KEY (`album_id`)
    REFERENCES `bacefook`.`albums` (`id`),
  CONSTRAINT `fk_photo_id`
    FOREIGN KEY (`photo_id`)
    REFERENCES `bacefook`.`photos` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `photo_id_fk_idx` ON `bacefook`.`album_photos` (`photo_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `bacefook`.`comments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bacefook`.`comments` ;

CREATE TABLE IF NOT EXISTS `bacefook`.`comments` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `poster_id` INT(11) NOT NULL,
  `post_id` INT(11) NOT NULL,
  `commented_on_id` INT(11) NULL DEFAULT NULL,
  `content` MEDIUMTEXT NOT NULL,
  `posting_time` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_commented_on_id`
    FOREIGN KEY (`commented_on_id`)
    REFERENCES `bacefook`.`comments` (`id`),
  CONSTRAINT `fk_post_id`
    FOREIGN KEY (`post_id`)
    REFERENCES `bacefook`.`posts` (`id`),
  CONSTRAINT `fk_poster_id`
    FOREIGN KEY (`poster_id`)
    REFERENCES `bacefook`.`users` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `fk_poster_id_idx` ON `bacefook`.`comments` (`poster_id` ASC) VISIBLE;

CREATE INDEX `fk_post_id_idx` ON `bacefook`.`comments` (`post_id` ASC) VISIBLE;

CREATE INDEX `fk_commented_on_id_idx` ON `bacefook`.`comments` (`commented_on_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `bacefook`.`comment_likes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bacefook`.`comment_likes` ;

CREATE TABLE IF NOT EXISTS `bacefook`.`comment_likes` (
  `comment_id` INT(11) NOT NULL,
  `user_id` INT(11) NOT NULL,
  PRIMARY KEY (`comment_id`, `user_id`),
  CONSTRAINT `fk_comment_id`
    FOREIGN KEY (`comment_id`)
    REFERENCES `bacefook`.`comments` (`id`),
  CONSTRAINT `fk_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `bacefook`.`users` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `fk_user_id_idx` ON `bacefook`.`comment_likes` (`user_id` ASC) VISIBLE;

CREATE INDEX `fk_comment_id_idx` ON `bacefook`.`comment_likes` (`comment_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `bacefook`.`comments_on_posts`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bacefook`.`comments_on_posts` ;

CREATE TABLE IF NOT EXISTS `bacefook`.`comments_on_posts` (
  `post_id` INT(11) NOT NULL,
  `comment_id` INT(11) NOT NULL,
  PRIMARY KEY (`post_id`, `comment_id`),
  CONSTRAINT `fk_comments_posts1`
    FOREIGN KEY (`post_id`)
    REFERENCES `bacefook`.`posts` (`id`),
  CONSTRAINT `fk_shares_posts10`
    FOREIGN KEY (`comment_id`)
    REFERENCES `bacefook`.`posts` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `fk_shares_posts1_idx` ON `bacefook`.`comments_on_posts` (`comment_id` ASC) VISIBLE;

CREATE INDEX `fk_comments_posts1_idx` ON `bacefook`.`comments_on_posts` (`post_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `bacefook`.`post_likes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bacefook`.`post_likes` ;

CREATE TABLE IF NOT EXISTS `bacefook`.`post_likes` (
  `user_id` INT(11) NOT NULL,
  `post_id` INT(11) NOT NULL,
  PRIMARY KEY (`post_id`, `user_id`),
  CONSTRAINT `post_id_fk`
    FOREIGN KEY (`post_id`)
    REFERENCES `bacefook`.`posts` (`id`),
  CONSTRAINT `user_id_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `bacefook`.`users` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `fk_post_id_idx` ON `bacefook`.`post_likes` (`post_id` ASC) VISIBLE;

CREATE INDEX `fk_user_id_idx` ON `bacefook`.`post_likes` (`user_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `bacefook`.`post_shares`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bacefook`.`post_shares` ;

CREATE TABLE IF NOT EXISTS `bacefook`.`post_shares` (
  `sharing_post_id` INT(11) NOT NULL,
  `shared_post_id` INT(11) NOT NULL,
  PRIMARY KEY (`shared_post_id`, `sharing_post_id`),
  CONSTRAINT `fk_shares_posts1`
    FOREIGN KEY (`sharing_post_id`)
    REFERENCES `bacefook`.`posts` (`id`),
  CONSTRAINT `fk_shares_posts2`
    FOREIGN KEY (`shared_post_id`)
    REFERENCES `bacefook`.`posts` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `fk_shares_posts1_idx` ON `bacefook`.`post_shares` (`sharing_post_id` ASC) VISIBLE;

CREATE INDEX `fk_shares_posts2_idx` ON `bacefook`.`post_shares` (`shared_post_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `bacefook`.`relations`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bacefook`.`relations` ;

CREATE TABLE IF NOT EXISTS `bacefook`.`relations` (
  `user1_id` INT(11) NOT NULL,
  `user2_id` INT(11) NOT NULL,
  PRIMARY KEY (`user1_id`, `user2_id`),
  CONSTRAINT `user1_id_fk`
    FOREIGN KEY (`user1_id`)
    REFERENCES `bacefook`.`users` (`id`),
  CONSTRAINT `user2_id_fk`
    FOREIGN KEY (`user2_id`)
    REFERENCES `bacefook`.`users` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `fk_user2_id_idx` ON `bacefook`.`relations` (`user2_id` ASC) VISIBLE;

CREATE INDEX `fk_user1_id_idx` ON `bacefook`.`relations` (`user1_id` ASC) VISIBLE;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
